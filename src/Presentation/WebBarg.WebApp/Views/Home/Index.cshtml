@using System.Web.Helpers
@model WebBarg.Application.DTO.UserFormViewModel

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .dataInfo {
        margin-top:25px;
    }
    .wrapper {
        width: 400px;
        height: 400px;
        border: 1px solid black; 
    }

    body {
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    h2 {
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    th, td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #f5f5f5;
    }
    .container_bar{
        display: flex;
        justify-content: space-around;
        align-items: center;
    }

    body {
        background-color: #f8f9fa;
    }

    .container_bar {
    }

    .card {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .form_dropdown{
        display: flex;
        justify-content: space-around;
        width: 100%;
        }

    #filterInput {
        width: 200px;
        padding: 8px;
        margin-right: 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

    #refreshButton {
        padding: 8px 16px;
        background-color: #007bff;
        color: #fff;
        border: 1px solid #007bff;
        border-radius: 4px;
        cursor: pointer;
    }

        #refreshButton:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .searchbox{
        display: flex;
        justify-content: center;
        }
</style>
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div>
        <div class="container container_bar mt-5">
            <div class="card p-4">
                <h2 class="card-title text-center mb-4">User Form</h2>

                <form id="userForm" enctype="multipart/form-data">
                    <div class="form-row">
                        <div class="form-group col-md-6 form_dropdown">
                            <div class="col">
                                <input type="text" class="form-control" id="Name" name="Name" placeholder="Name" required>
                            </div>
                            <div class="col">
                                <input type="text" class="form-control" id="Family" name="Family" placeholder="Family" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-row form_dropdown">
                        <div class="form-group col-md-4">
                            <label for="CountryId">Country</label>
                            <select id="CountryId" name="CountryId" required class="form-control">
                                <option value="" disabled selected>Select Country</option>
                            </select>
                        </div>
                        <div class="form-group col-md-4">
                            <label for="CityId">City</label>
                            <select id="CityId" name="CityId" required class="form-control">
                                <option value="" disabled selected>Select City</option>
                            </select>
                        </div>
                    </div>                    
                    <div class="form-group">
                        <label for="Picture">Upload Picture:</label>
                        <input type="file" class="form-control-file" id="Picture" name="Picture" accept="image/*">
                    </div>
                    <div class="text-center">
                        <button type="button" class="btn btn-primary" id="submitBtn">Submit</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
    <div class="dataInfo">

        <div class="searchbox">
            <input type="text" class="form-control" id="filterInput" placeholder="Enter Filter Value">
            <button class="btn btn-primary" id="refreshButton">Refresh Data</button>
        </div>
        <div class="container_bar">
            <div class="wrapper">
                <canvas id="pieChart" width="400" height="400"></canvas>
            </div>
            <div>
                <h2>User List</h2>


                <table id="userTable" border="1">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Family</th>
                            <th>City</th>
                            <th>Country</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                    </tbody>
                </table>

                <div id="paginationContainer">
                 
                </div>
            </div>
        </div>
    </div>
   
    
</div>

<script>
    var filterInput = document.getElementById('filterInput');
    var refreshButton = document.getElementById('refreshButton');
    var filterInput = document.getElementById('filterInput');
    var filterValue = filterInput.value;
    
    $(document).ready(function () {
        loadData(1, 10); 
        fetchDataAndRefreshChart("");
        loadCountries();

        $("#CountryId").change(function () {
            loadCities($(this).val());
        });

       
        $("#submitBtn").click(function () {
            submitForm();
        });

        $("#refreshButton").on("click", function () {
            var page = 1;
            var pageSize = 10;
            var filter = $("#filterInput").val();
            loadData(page, pageSize, filter);
            fetchDataAndRefreshChart(filter);
        });

        $("#paginationContainer").on("click", ".page-link", function (e) {
            e.preventDefault();
            var page = parseInt($(this).text()); 
            var pageSize = 10;
            var filter = $("#filterInput").val();
            loadData(page, pageSize, filter);
        });
    });

    function loadData(page, pageSize, filter) {
        $.ajax({
            type: "GET",
            url: "api/user/GetUsers",
            data: { filter: filter, pageNumber: page, pageSize: pageSize },
            success: function (result) {
                updateTable(result.data);
                updatePagination(result.pageInfo);
            },
            error: function (error) {
                console.error("Error loading data:", error);
            }
        });
    }

    function updateTable(data) {
        var table = $("#userTable");
        table.find("tbody").empty(); 

        $.each(data, function (index, user) {
            var row = `<tr><td>${user.name}</td><td>${user.family}</td><td>${user.cityName}</td><td>${user.countryName}</td></tr>`;
            table.find("tbody").append(row);
        });
    }

    function updatePagination(pageInfo) {
        var paginationContainer = $("#paginationContainer");
        paginationContainer.empty(); 

        var pagination = `<nav aria-label="Page navigation"><ul class="pagination">`;
        for (var i = 1; i <= pageInfo.pageCount; i++) {
            pagination += `<li class="page-item${i === pageInfo.pageNumber ? ' active' : ''}"><a class="page-link" href="#">${i}</a></li>`;
        }
        pagination += `</ul></nav>`;

        paginationContainer.append(pagination);
    }
    function fetchDataAndRefreshChart(filter) {
        fetch(`api/User/ChartPie?filter=${filter}`)
            .then(response => response.json())
            .then(data => {
                updatePieChartData(data);
            })
            .catch(error => {
                console.error("Error fetching data for pie chart:", error);
            });
    }

    function updatePieChartData(data) {
        var pieChartCanvas = document.getElementById('pieChart');
        var ctx = pieChartCanvas.getContext('2d');

        if (window.pieChartInstance) {
            window.pieChartInstance.destroy();
        }

        window.pieChartInstance = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: data.map(item => item.cityName),
                datasets: [{
                    data: data.map(item => item.percentage),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(255, 99, 86, 0.7)',
                        'rgba(54, 99, 86, 0.7)',
                        'rgba(54, 99, 132, 0.7)',
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(255, 206, 132, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(255, 99, 86, 0.7)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(255, 99, 86, 1)',
                        'rgba(54, 99, 86, 1)',
                        'rgba(54, 99, 132, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 206, 132, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(255, 99, 86, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                tooltips: {
                    enabled: false
                },
                plugins: {
                    legend: { display: false },
                    tooltips: {
                        enabled: true,
                        mode: 'single',
                        callbacks: {
                            label: function (tooltipItem, data) {
                                var allData = data.datasets[tooltipItem.datasetIndex].data;
                                var tooltipLabel = data.labels[tooltipItem.index];
                                var tooltipData = allData[tooltipItem.index];
                                return tooltipLabel + ": " + tooltipData + "%";
                                
                            }
                        }
                    },
                    datalabels: {
                        formatter: (value, ctx) => {
                            let sum = 0;
                            let dataArr = ctx.chart.data.datasets[0].data;
                            dataArr.map((data) => {
                                sum += data;
                            });
                            let percentage = ((value * 100) / sum).toFixed(2) + "%";
                            return percentage;
                        },
                        color: "#FFF",
                    },
                },
                onHover: function (e) {
                    e.native.target.style.cursor = "pointer";
                },
                rotation: 270,
                events: ["click"],
                onClick: function (event, element) {
                    console.log(element[0].index);
                },
            }
        });
    }
    
    function loadCountries() {
        $.ajax({
            type: "GET",
            url: "/api/user/GetCountries",
            success: function (countries) {
                populateDropdown("#CountryId", countries);

                var defaultCountryId = $("#CountryId").val();
                loadCities(defaultCountryId);
            },
            error: function (error) {
                console.error("Error loading countries:", error);
            }
        });
    }

    function loadCities(countryId) {
        $.ajax({
            type: "GET",
            url: "/api/user/GetCitiesByCountry/",
            data: { countryId: countryId },
            success: function (cities) {
                populateDropdown("#CityId", cities);
            },
            error: function (error) {
                console.error("Error loading cities:", error);
            }
        });
    }

    function populateDropdown(selector, data) {
        var dropdown = $(selector);
        dropdown.empty();

        $.each(data, function (i, item) {
            dropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
        });
    }

    function submitForm() {
        var formData = new FormData($("#userForm")[0]);

        $.ajax({
            type: "POST",
            url: "/api/user/createuser",
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                alert("User created successfully!");
                resetForm();
            },
            error: function (error) {
                alert("Error creating user");
                console.error("Error creating user:", error);
            }
        });
    }
    function resetForm() {
        $("#userForm")[0].reset();

        $("#CountryId").val("");
        $("#CityId").empty().append('<option value="" disabled selected>Select City</option>');
    }
</script>

