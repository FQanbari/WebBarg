@using System.Web.Helpers

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <input type="text" id="filterInput" placeholder="Enter Filter Value" />
    <button id="refreshButton">Refresh Data</button>
    <canvas id="pieChart" width="400" height="400"></canvas>

    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var pieChartCanvas = document.getElementById('pieChart');
        var refreshButton = document.getElementById('refreshButton');
        var filterInput = document.getElementById('filterInput');

        var pieChart;

        refreshButton.addEventListener('click', function () {
            fetchDataAndRefreshChart();
        });

        async function fetchDataAndRefreshChart() {
            // Fetch data from your API endpoint with the filter value
            var filterValue = filterInput.value;
            var response = await fetch(`/YourController/ChartPie?filter=${filterValue}`);
            var data = await response.json();

            // Update pie chart data
            updatePieChartData(data);
        }

        function updatePieChartData(data) {
            if (pieChart) {
                pieChart.destroy(); // Destroy the existing chart instance
            }

            var ctx = pieChartCanvas.getContext('2d');
            pieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(item => item.CityName),
                    datasets: [{
                        data: data.map(item => item.UserCount),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                            // Add more colors as needed
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            // Add more colors as needed
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    // Add other options as needed
                }
            });
        }

        // Initial data fetch and chart rendering
        fetchDataAndRefreshChart();
    });
</script>

